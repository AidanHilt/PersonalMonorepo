{
  "actions": [
    {
      "name": "validate_buildconfig",
      "command": "poetry run check-jsonschema .atils_buildconfig.json --schemafile ../json-schemas/atils_buildconfig.json",
      "order": 0
    },
    {
      "name": "type-check",
      "command": "poetry run mypy atils",
      "order": 1
    },
    {
      "name": "test",
      "command": "poetry run pytest",
      "order": 2
    },
    {
      "name": "build",
      "command": "poetry build",
      "order": 10
    },
    {
      "name": "install",
      "command": "VERSION=$(grep -E '^version = \"' pyproject.toml | cut -d'\"' -f2); pipx install dist/atils-$VERSION.tar.gz --force",
      "order": 11
    },
    {
      "name": "docker-build",
      "order": 12,
      "command": "VERSION=$(grep -E '^version = \"' pyproject.toml | cut -d'\"' -f2); docker build -t \"aidanhilt/atils:$VERSION\" -t \"aidanhilt/atils:latest\" ."
    },
    {
      "name": "docker-publish",
      "order": 13,
      "command": "VERSION=$(grep -E '^version = \"' pyproject.toml | cut -d'\"' -f2); docker push aidanhilt/atils:$VERSION",
      "ci_only": true
    },
    {
      "name": "docker-publish-latest",
      "order": 14,
      "command": "docker push aidanhilt/atils:latest",
      "ci_only": true
    }
  ],
  "action_sets": [
    {
      "name": "validate",
      "actions": [
        "test",
        "type-check",
        "validate_buildconfig"
      ],
      "description": "Runs code quality checks and tests",
      "default": true
    },
    {
      "name": "local-install",
      "actions": [
        "build",
        "install"
      ],
      "description": "Builds and installs atils locally, for testing purposes"
    }
  ]
}