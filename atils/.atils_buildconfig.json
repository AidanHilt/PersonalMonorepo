{
  "actions": [
    {
      "name": "install-dependencies",
      "command": "poetry install",
      "order": 0
    },
    {
      "name": "validate_buildconfig",
      "command": "poetry run check-jsonschema .atils_buildconfig.json --schemafile ../json-schemas/atils_buildconfig.json",
      "order": 1
    },
    {
      "name": "type-check",
      "command": "poetry run mypy atils",
      "order": 2
    },
    {
      "name": "test",
      "command": "poetry run pytest",
      "order": 3
    },
    {
      "name": "build",
      "command": "poetry build",
      "order": 10
    },
    {
      "name": "local-install",
      "command": "VERSION=$(grep -E '^version = \"' pyproject.toml | cut -d'\"' -f2); pipx install dist/atils-$VERSION.tar.gz --force",
      "order": 11
    },
    {
      "name": "publish-py-pi",
      "order": 20,
      "command": "poetry publish -u __token__ -p \"$PYPI_AUTH_TOKEN\"",
      "ci_only": true
    }
  ],
  "action_sets": [
    {
      "name": "validate",
      "actions": [
        "test",
        "type-check",
        "validate_buildconfig"
      ],
      "description": "Runs code quality checks and tests",
      "default": true
    },
    {
      "name": "local-install",
      "actions": [
        "build",
        "local-install"
      ],
      "description": "Builds and installs atils locally, for testing purposes"
    },
    {
      "name": "ci-build-publish",
      "actions": [
        "install-dependencies",
        "test",
        "type-check",
        "validate_buildconfig",
        "build",
        "publish-py-pi",
        "docker-build-arm64",
        "docker-build-amd64",
        "docker-push-arm64",
        "docker-push-amd64",
        "create-manifest-versioned",
        "create-manifest-latest",
        "push-manifest-versioned",
        "push-manifest-latest"
      ],
      "description": "Builds and publishes atils to Docker Hub, as well as PyPI"
    }
  ]
}