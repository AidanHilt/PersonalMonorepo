jobs:
  configure-jellyfin:
    namespace: videos
    enabled: true
    image:
      repository: python
      tag: "3.12-alpine"
    serviceAccountName: jellyfin
    command: ["sh", "-c"]
    args:
      - |
        pip install jellyfin_apiclient_python && python -c "
        from jellyfin_apiclient_python import JellyfinClient
        from time import sleep

        import json
        import os

        ACCESS_TOKEN = os.environ['ACCESS_TOKEN']
        JELLYFIN_URL = os.environ['JELLYFIN_URL']

        print(ACCESS_TOKEN)
        print(JELLYFIN_URL)

        client = JellyfinClient()
        client.config.data['app.name'] = 'Aidan\'s Audacious Configuration Alterator'
        client.config.data['app.version'] = '0.0.1'
        client.config.data['auth.ssl'] = True

        client.authenticate({'Servers': [{'AccessToken': ACCESS_TOKEN, 'address': JELLYFIN_URL}]}, discover=False)
        print('Successfully authenticated with API key')

        client.jellyfin.add_media_library('Movies', 'movies', '/videos/Movies')
        client.jellyfin.add_media_library('TV Shows', 'tvshows', '/videos/TV')
        print('Added library')

        exit(0)
        "
    env:
      - name: JELLYFIN_URL
        value: http://jellyfin/emby
      - name: ACCESS_TOKEN
        value:
          secret:
            valueFrom:
              secretKeyRef:
                name: jellyfin-config-secret
                key: apiKey
  run-buildarr-sonarr:
    namespace: videos
    enabled: true
    image:
      repository: aidanhilt/buildarr
      tag: feat-external-user-1-retry
    command: ["sh", "-c"]
    args:
      - |
        echo "Running buildarr for sonarr"
        buildarr run /config/buildarr.yml
    volumeMounts:
      - name: config
        mountPath: /config
    volumes:
      - name: config
        secret:
          secretName: buildarr-sonarr-config-secret
    restartPolicy: Never
    backoffLimit: 1
  run-buildarr-radarr:
    namespace: videos
    enabled: true
    image:
      repository: aidanhilt/buildarr
      tag: feat-external-user-1-retry
    command: ["sh", "-c"]
    args:
      - |
        echo "Running buildarr for radarr"
        buildarr run /config/buildarr.yml
    volumeMounts:
      - name: config
        mountPath: /config
    volumes:
      - name: config
        secret:
          secretName: buildarr-radarr-config-secret
    restartPolicy: Never
    backoffLimit: 1
  run-buildarr-prowlarr:
    namespace: videos
    enabled: true
    image:
      repository: aidanhilt/buildarr
      tag: feat-external-user-1-retry
    command: ["sh", "-c"]
    args:
      - |
        echo "Running buildarr for prowlarr"
        buildarr run /config/buildarr.yml
    volumeMounts:
      - name: config
        mountPath: /config
    volumes:
      - name: config
        secret:
          secretName: buildarr-prowlarr-config-secret
    restartPolicy: Never
    backoffLimit: 1
  run-buildarr-jellyseerr:
    namespace: videos
    enabled: true
    image:
      repository: aidanhilt/buildarr
      tag: feat-external-user-1-retry
    command: ["sh", "-c"]
    args:
      - |
        echo "Running buildarr for jellyseerr"
        buildarr run /config/buildarr.yml
    volumeMounts:
      - name: config
        mountPath: /config
    volumes:
      - name: config
        secret:
          secretName: buildarr-jellyseerr-config-secret
    restartPolicy: Never
    backoffLimit: 1
