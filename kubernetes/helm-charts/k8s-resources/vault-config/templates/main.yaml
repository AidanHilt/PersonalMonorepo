{{- range $vaultConfigName, $vaultConfig := .Values }}
# This guards against auto-generated values, which I'm too lazy to specialize
{{- if and (and (ne $vaultConfigName "hostnames") $vaultConfig.enabled) $vaultConfig.secretDestinationNamespace }}
---
{{- $resourceName := $vaultConfig.resourceName | default $vaultConfigName}}
{{- $serviceAccountName := ($vaultConfig.serviceAccount).name | default $resourceName }}
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name: {{ $resourceName }}-auth
  namespace: {{ $vaultConfig.secretDestinationNamespace }}
spec:
  method: kubernetes
  mount: kubernetes
  kubernetes:
    role: {{ $resourceName }}
    serviceAccount: {{ $serviceAccountName }}
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: {{ $resourceName }}-config-secret
  namespace: {{ $vaultConfig.secretDestinationNamespace }}
spec:
  type: kv-v2
  mount: {{ $vaultConfig.secretDestinationNamespace }}
  path: {{ $resourceName }}/config

  destination:
    name: {{ $resourceName }}-config-secret
    create: true

    {{- if $vaultConfig.destination }}
    {{ toYaml $vaultConfig.destination | nindent 4}}
    {{- end }}

  refreshAfter: 30s

  vaultAuthRef: {{ $resourceName }}-auth

{{- if (get (default (dict) $vaultConfig.serviceAccount) "create") | default false }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName }}
  namespace: {{ $vaultConfig.serviceAccount.namespace }}
{{- end }}
{{- end }}
{{- end }}