{{- if .Values.prowlarr.postgres.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-postgres-init"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-postgres-init"
    spec:
      restartPolicy: Never
      containers:
      - name: postgres-init
        image: "aidanhilt/atils-postgres-client"
        command: [psql]
        args:
        - <
        - /mnt/setup.sql
        env:
        {{- $defaultSecretName := printf "%v-%v" .Release.Name "config-secret" }}
        {{ if .Values.prowlarr.postgres.enabled }}
        - name: PGHOST
          value: {{ .Values.prowlarr.postgres.host }}
        - name: PGPORT
          value: {{ .Values.prowlarr.postgres.port | quote }}
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.prowlarr.configSecret.existingSecret | default $defaultSecretName }}
              key: {{ .Values.prowlarr.postgres.postgresConfigSecretUsernameKey }}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.prowlarr.configSecret.existingSecret | default $defaultSecretName}}
              key: {{ .Values.prowlarr.postgres.postgresConfigSecretPasswordKey }}
        {{ end }}
        volumeMounts:
        - name: postgres-init-script
          mountPath: /mnt/setup.sql
          subPath: setup.sql
      volumes:
      - name: postgres-init-script
        configMap:
          name: prowlarr-postgres-init
{{- end }}