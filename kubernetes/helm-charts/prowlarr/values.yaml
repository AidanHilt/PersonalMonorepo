#================================================================================================================================================
# You should be able to use any of the values you can find here: https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
#================================================================================================================================================
image:
  repository: ghcr.io/onedr0p/prowlarr-develop
  pullPolicy: IfNotPresent

service:
  main:
    ports:
      http:
        port: 80
        targetPort: 9696

probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command:
          - /usr/bin/env
          - bash
          - -c
          - curl --fail localhost:9696/api/v1/system/status?apiKey=`IFS=\> && while
            read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

persistence:
  config:
    enabled: false

#================================
# Prowlarr specific configuration
#================================
prowlarr:
  apiKey: ""
  urlBase: /
  timezone: "Etc/UTC"

  # Note: If this is set, the field apiKey won't have any effect
  configSecret:
    existingSecret: ""

  # Settings to control using an external Postgres DB
  postgres:
    enabled: false

    username: prowlarr
    password: ""

    port: 5432
    host: postgres-postgresql.postgres.svc.cluster.local

    mainDb: prowlarr_main
    logDb: prowlarr_logs

    # True if we want to run a hook after install to get the DB set up, false otherwise
    setupJob:
      enabled: true

      # This probably doesn't matter in your setup, but you may need to change this if you're
      # using some kind of external secrets operator that authenticates with service accounts
      setupJobServiceAccount: default

      # The name of a pre-existing secret containing the MASTER username and password for postgres
      # This user needs to have access to set stuff up for the Prowlarr user. Required if setupJob.enabled
      # is set to true
      setupJobSecret: ""

      secretUsernameKey: masterUsername
      secretPasswordKey: masterPassword

  metrics:
    enabled: false
    serviceMonitor:
      interval: 3m
      scrapeTimeout: 1m
      labels: {}
    exporter:
      image:
        # -- image repository
        repository: ghcr.io/onedr0p/exportarr
        # -- image tag
        tag: v1.5.3
        # -- image pull policy
        pullPolicy: IfNotPresent
      env:
        # -- metrics port
        port: 9794
        # -- Set to true to enable gathering of additional metrics (slow)
        additionalMetrics: false
        # -- Set to true to enable gathering unknown queue items
        unknownQueueItems: false
